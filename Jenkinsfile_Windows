#!groovy

pipeline {
    agent any
    options {
        timestamps()
        timeout(time: 3, unit: 'HOURS')
        buildDiscarder(logRotator(numToKeepStr: '30', artifactNumToKeepStr: '5'))
    }
    stages {
        stage('Get dependencies') {
            agent {
                label "windows"
            }
            environment {
                QTDIR = "C:\\Qt\\5.9.6\\msvc2017_64"
            }
            steps {
                script {
                    def exists = fileExists 'Spectre.Prebuild.libraries.zip'

                    if (exists) {
                        echo 'Archive \'Spectre.Prebuild.libraries.zip\' exists, nothing to download.'
                    } else {
                        echo 'Archive \'Spectre.Prebuild.libraries.zip\' not found, downloading...'
                        fileOperations([
                                fileDownloadOperation(
                                        password: '',
                                        targetFileName: 'Spectre.Prebuild.libraries.zip',
                                        targetLocation: "${WORKSPACE}",
                                        url: 'https://github.com/spectrecoin/spectre/releases/download/v2.0.7/Spectre.Prebuild.libraries.zip',
                                        userName: ''),
                                fileDownloadOperation(
                                        password: '',
                                        targetFileName: '',
                                        targetLocation: "${WORKSPACE}",
                                        url: 'https://github.com/spectrecoin/spectre/releases/download/latest/Tor.zip',
                                        userName: ''),
                                fileUnZipOperation(
                                        filePath: 'Spectre.Prebuild.libraries.zip',
                                        targetLocation: '.'),
                                folderCopyOperation(
                                        destinationFolderPath: 'leveldb',
                                        sourceFolderPath: 'Spectre.Prebuild.libraries/leveldb'),
                                folderCopyOperation(
                                        destinationFolderPath: 'packages64bit',
                                        sourceFolderPath: 'Spectre.Prebuild.libraries/packages64bit'),
                                folderCopyOperation(
                                        destinationFolderPath: 'src',
                                        sourceFolderPath: 'Spectre.Prebuild.libraries/src'),
                                folderCopyOperation(
                                        destinationFolderPath: 'tor',
                                        sourceFolderPath: 'Spectre.Prebuild.libraries/tor'),
                                folderDeleteOperation(
                                        './Spectre.Prebuild.libraries'
                                )
                        ])
                    }
                    bat 'scripts\\win-build.bat'
                    fileOperations([
                            fileUnZipOperation(
                                    filePath: "${WORKSPACE}/Tor.zip",
                                    targetLocation: '${WORKSPACE}/src/Spectrecoin/'),
                            fileDeleteOperation(
                                    excludes: '',
                                    includes: "${WORKSPACE}/Tor.zip"),
                            fileZipOperation('${WORKSPACE}/src/Spectrecoin')
                    ])
                    archiveArtifacts allowEmptyArchive: true, artifacts: 'Spectrecoin.zip'
                }
            }
        }
    }
}
